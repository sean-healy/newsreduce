/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 54);
/******/ })
/************************************************************************/
/******/ ({

/***/ 1:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return REDIS_PARAMS; });
/* unused harmony export STATIC_CONNECTIONS */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Redis; });
/* harmony import */ var redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25);
/* harmony import */ var redis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redis__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _logging__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);




const MAIN_HOST = "newsreduce.org";
const LOCALHOST = "127.0.0.1";
const DEFAULT_REDIS_PORT = 6379;
const DEFAULT_REDIS_DB = 0;
const REDIS_PARAMS = {
    local: {
        host: LOCALHOST,
        port: DEFAULT_REDIS_PORT,
        db: DEFAULT_REDIS_DB,
    },
    events: {
        host: MAIN_HOST,
        port: DEFAULT_REDIS_PORT,
        db: DEFAULT_REDIS_DB,
    },
    fetchSchedule: {
        host: MAIN_HOST,
        port: DEFAULT_REDIS_PORT,
        db: 1,
    },
    general: {
        host: MAIN_HOST,
        port: DEFAULT_REDIS_PORT,
        db: 2,
    },
    throttle: {
        host: MAIN_HOST,
        port: DEFAULT_REDIS_PORT,
        db: 3,
    },
    inserts: {
        host: MAIN_HOST,
        port: DEFAULT_REDIS_PORT,
        db: 4,
    },
    fileLock: {
        host: LOCALHOST,
        port: DEFAULT_REDIS_PORT,
        db: 5,
    },
    fetchLock: {
        host: MAIN_HOST,
        port: DEFAULT_REDIS_PORT,
        db: 6,
    },
};
for (const key in REDIS_PARAMS)
    REDIS_PARAMS[key].name = key;
const STATIC_CONNECTIONS = {};
/*
 * A proxy for the redis client, which survives all sorts of
 * errors from client resets.
 */
class Redis {
    constructor(params, client) {
        this.params = params;
        this.client = client;
    }
    async tryLoop(cb) {
        for (let attempt = 0; attempt < 10; ++attempt) {
            try {
                const response = await new Promise(cb);
                return response;
            }
            catch (err) {
                Object(_logging__WEBPACK_IMPORTED_MODULE_3__[/* log */ "a"])("error on attempt", attempt.toString());
                Object(_logging__WEBPACK_IMPORTED_MODULE_3__[/* log */ "a"])(err);
                console.debug(err);
                const oldClient = STATIC_CONNECTIONS[this.params.name];
                delete STATIC_CONNECTIONS[this.params.name];
                oldClient.quit();
                this.client = Redis.renewRedis(this.params).client;
            }
        }
        return null;
    }
    async zincrby(key, increment, member) {
        const response = await this.tryLoop((res, rej) => this.client.zincrby(key, increment, member, err => err ? rej(err) : res()));
        return response;
    }
    async zpopmaxN(key, count) {
        const response = await this.tryLoop((res, rej) => this.client.zpopmax([key, count], (err, response) => err ? rej(err) : res(response)));
        return response;
    }
    async zpopmax(key, count) {
        const response = await this.tryLoop((res, rej) => this.client.zpopmax([key, count], (err, response) => err ? rej(err) : res(!response || response.length === 0 ? null : response[0])));
        return response;
    }
    async spop(key) {
        const response = await this.tryLoop((res, rej) => this.client.spop(key, (err, response) => err ? rej(err) : res(response)));
        return response;
    }
    async srem(key, member) {
        const response = await this.tryLoop((res, rej) => this.client.srem(key, member, err => err ? rej(err) : res()));
        return response;
    }
    async hdel(key, member) {
        const response = await this.tryLoop((res, rej) => this.client.hdel(key, member, err => err ? rej(err) : res()));
        return response;
    }
    async smembers(key) {
        const response = await this.tryLoop((res, rej) => this.client.smembers(key, (err, members) => err ? rej(err) : res(members)));
        return response;
    }
    async hgetall(key) {
        const response = await this.tryLoop((res, rej) => this.client.hgetall(key, (err, members) => err ? rej(err) : res(members)));
        return response;
    }
    async type(key) {
        const response = await this.tryLoop((res, rej) => this.client.type(key, (err, type) => err ? rej(err) : res(type)));
        return response;
    }
    async srandmember(key, batch) {
        const response = await this.tryLoop((res, rej) => this.client.srandmember(key, batch, (err, members) => err ? rej(err) : res(members)));
        return response;
    }
    async setex(key, seconds = 60, value = _util__WEBPACK_IMPORTED_MODULE_2__[/* STR_ONE */ "b"]) {
        const response = await this.tryLoop((res, rej) => this.client.setex(key, seconds, value, err => err ? rej(err) : res()));
        return response;
    }
    async set(key, value = _util__WEBPACK_IMPORTED_MODULE_2__[/* STR_ONE */ "b"]) {
        const response = await this.tryLoop((res, rej) => this.client.set(key, value, err => err ? rej(err) : res()));
        return response;
    }
    async setpx(key, ms = 1050, value = _util__WEBPACK_IMPORTED_MODULE_2__[/* STR_ONE */ "b"]) {
        const response = await this.tryLoop((res, rej) => this.client.set(key, value, "PX", ms, err => err ? rej(err) : res()));
        return response;
    }
    async sadd(key, member) {
        const response = await this.tryLoop((res, rej) => this.client.sadd(key, member, err => err ? rej(err) : res()));
        return response;
    }
    async sismember(key, member) {
        const response = await this.tryLoop((res, rej) => this.client.sismember(key, member, (err, exists) => err ? rej(err) : res(!!exists)));
        return response;
    }
    async get(key) {
        const response = await this.tryLoop((res, rej) => this.client.get(key, (err, response) => err ? rej(err) : res(response)));
        return response;
    }
    async del(key) {
        const response = await this.tryLoop((res, rej) => this.client.del(key, err => err ? rej(err) : res()));
        return response;
    }
    async keys(pattern = "*") {
        const response = await this.tryLoop((res, rej) => this.client.keys(pattern, (err, keys) => err ? rej(err) : res(keys)));
        return response;
    }
    async hset(key, field, value) {
        const response = await this.tryLoop((res, rej) => this.client.hset(key, field, value, err => err ? rej(err) : res()));
        return response;
    }
    async eq(key, value = _util__WEBPACK_IMPORTED_MODULE_2__[/* STR_ONE */ "b"]) {
        const response = await this.tryLoop((res, rej) => this.client.get(key, (err, response) => err ? rej(err) : res(response === value)));
        return response;
    }
    async publish(channel, msg) {
        const response = await this.tryLoop((res, rej) => this.client.publish(channel, msg, (err, response) => err ? rej(err) : res(response)));
        return response;
    }
    static getName(paramsOrHost) {
        return (typeof paramsOrHost === "string") ?
            paramsOrHost : paramsOrHost.name;
    }
    static computeParams(paramsOrHost) {
        const name = Redis.getName(paramsOrHost);
        let params = REDIS_PARAMS[name];
        if (!params) {
            params = Redis.defaultHostParams(paramsOrHost);
            REDIS_PARAMS[name] = params;
        }
        return params;
    }
    static renewRedis(paramsOrHost) {
        const params = this.computeParams(paramsOrHost);
        let client = STATIC_CONNECTIONS[params.name];
        let redis;
        if (!client) {
            redis = Redis.newRedis(params);
            STATIC_CONNECTIONS[params.name] = redis.client;
        }
        else {
            redis = new Redis(params, client);
        }
        return redis;
    }
    static newRedis(paramsOrHost) {
        const params = this.computeParams(paramsOrHost);
        const client = redis__WEBPACK_IMPORTED_MODULE_0___default.a.createClient({
            host: common_config__WEBPACK_IMPORTED_MODULE_1__[/* ENV */ "a"][0] === "prod" ? params.host : LOCALHOST,
            port: common_config__WEBPACK_IMPORTED_MODULE_1__[/* ENV */ "a"][0] === "prod" ? params.port : 1111,
            db: params.db,
        });
        client.on("error", (error, msg) => {
            if (msg) {
                Object(_logging__WEBPACK_IMPORTED_MODULE_3__[/* log */ "a"])(msg);
                console.debug(msg);
            }
            if (error) {
                Object(_logging__WEBPACK_IMPORTED_MODULE_3__[/* log */ "a"])(error);
                console.debug(error);
            }
        });
        return new Redis(params, client);
    }
}
Redis.defaultHostParams = (host) => ({
    host,
    name: host,
    port: DEFAULT_REDIS_PORT,
    db: DEFAULT_REDIS_DB,
});


/***/ }),

/***/ 13:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DNS; });
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dns__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_fetch__WEBPACK_IMPORTED_MODULE_1__);


class DNS {
    static lookup(hostname) {
        return new Promise((res, rej) => {
            dns__WEBPACK_IMPORTED_MODULE_0___default.a.lookup(hostname, (err, address, family) => {
                if (err)
                    rej(err);
                else if (family === 4)
                    res(DNS.ipv4AsIpv6(address));
                else
                    res(address);
            });
        });
    }
    static ipv4AsIpv6(ipv4) {
        return `::ffff:${ipv4}`;
    }
    static async whoami() {
        const ip = await node_fetch__WEBPACK_IMPORTED_MODULE_1___default()("http://newsreduce.org:9999/ip").then(response => response.text());
        return ip;
    }
}


/***/ }),

/***/ 2:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return log; });
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const TOGGLE = false;
async function log(...args) {
    if (TOGGLE) {
        const now = Date.now();
        const varDir = await Object(_config__WEBPACK_IMPORTED_MODULE_1__[/* varDirPromise */ "k"])();
        const logFile = `${varDir}/log`;
        fs__WEBPACK_IMPORTED_MODULE_0___default.a.appendFileSync(logFile, `${now}\t${args.join(" ")}\n`);
    }
}


/***/ }),

/***/ 20:
/***/ (function(module, exports) {

module.exports = require("dns");

/***/ }),

/***/ 25:
/***/ (function(module, exports) {

module.exports = require("redis");

/***/ }),

/***/ 3:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ENV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return LOCALHOST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return MAIN_HOSTNAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return NET_AGENT_ENDPOINT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return TAR; });
/* unused harmony export FIND */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return varDirPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return safetyFilePromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return safeMkdir; });
/* unused harmony export varDirChildPromise */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return tmpDirPromise; });
/* unused harmony export nullDirPromise */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return blobDirPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return nullFilePromise; });
/* unused harmony export myIP */
/* unused harmony export getParams */
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var common_DNS__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13);
let ENV = ["prod"];




const LOCALHOST = common_DNS__WEBPACK_IMPORTED_MODULE_3__[/* DNS */ "a"].ipv4AsIpv6("127.0.0.1");
const MAIN_HOSTNAME = "newsreduce.org";
const NET_AGENT_ENDPOINT = `http://${MAIN_HOSTNAME}:9999`;
const TAR = "tar";
const FIND = "find";
async function varDirPromise() {
    const varDir = ENV[0] === "prod" ? "/var/newsreduce" : "/var/newsreduce/test";
    await safeMkdir(varDir);
    return varDir;
}
async function safetyFilePromise() {
    const safetyFile = path__WEBPACK_IMPORTED_MODULE_1___default.a.join(await varDirPromise(), "safety");
    const exists = fs__WEBPACK_IMPORTED_MODULE_0___default.a.existsSync(safetyFile);
    if (!exists)
        fs__WEBPACK_IMPORTED_MODULE_0___default.a.writeFileSync(safetyFile, "0");
    return safetyFile;
}
async function safeMkdir(dir) {
    return fs__WEBPACK_IMPORTED_MODULE_0___default.a.mkdirSync(dir, { recursive: true, mode: 0o700 });
}
function varDirChildPromise(child) {
    return new Promise(async (res, rej) => {
        const dir = path__WEBPACK_IMPORTED_MODULE_1___default.a.join(await varDirPromise(), child);
        const exists = fs__WEBPACK_IMPORTED_MODULE_0___default.a.existsSync(dir);
        if (exists)
            res(dir);
        else
            fs__WEBPACK_IMPORTED_MODULE_0___default.a.mkdir(dir, err => err ? rej(err) : res(dir));
    });
}
function tmpDirPromise() {
    return varDirChildPromise("tmp");
}
function nullDirPromise() {
    return varDirChildPromise("null");
}
function blobDirPromise() {
    return varDirChildPromise("blobs");
}
async function nullFilePromise(path) {
    const safePath = path.replace(/[\/.]/g, "_");
    return `${await nullDirPromise()}/${safePath}-${Date.now()}`;
}
async function myIP() {
    const ip = await node_fetch__WEBPACK_IMPORTED_MODULE_2___default()("http://newsreduce.org:9999/ip").then(response => response.text());
    return ip;
}
let params = null;
async function getParams() {
    if (!params)
        params = await node_fetch__WEBPACK_IMPORTED_MODULE_2___default()(NET_AGENT_ENDPOINT).then(res => res.json());
    return params;
}


/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),

/***/ 54:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./dist/main/common/Redis.js
var Redis = __webpack_require__(1);

// CONCATENATED MODULE: ./dist/main/common/zookeeper.js

const ZERO = BigInt(0);
const ONE = BigInt(1);
function start(birthLog, deathLog, idBytes) {
    const MAX_ID = (ONE << BigInt(12 * idBytes));
    let dob = new Map();
    function sourceWorker(id) {
        const old = dob.has(id);
        dob.set(id, Date.now());
        if (!old)
            console.log(`new worker: ${id}`);
        reAssemble();
    }
    function retireWorker(id) {
        console.log(`retire worker ${id}`);
        dob.delete(id);
        reAssemble();
    }
    function retireWorkers(ids) {
        console.log(`retire workers: ${JSON.stringify(ids)}`);
        for (const id of ids)
            dob.delete(id);
        reAssemble();
    }
    function reAssemble() {
        if (dob.size === 0)
            return;
        const idsPerWorker = MAX_ID / BigInt(dob.size);
        let lo = ZERO;
        for (const [id,] of dob) {
            let hi = lo + idsPerWorker;
            if (hi + idsPerWorker > MAX_ID)
                hi = MAX_ID;
            Redis["b" /* Redis */].renewRedis(Redis["a" /* REDIS_PARAMS */].local).publish(id, `${lo} ${hi}`);
            lo += idsPerWorker;
        }
    }
    const birthsSub = Redis["b" /* Redis */].newRedis(Redis["a" /* REDIS_PARAMS */].local);
    birthsSub.client.subscribe(birthLog);
    birthsSub.client.on("message", (_, id) => sourceWorker(id));
    const deathsSub = Redis["b" /* Redis */].newRedis(Redis["a" /* REDIS_PARAMS */].local);
    deathsSub.client.subscribe(deathLog);
    deathsSub.client.on("message", (_, id) => retireWorker(id));
    setInterval(() => {
        const now = Date.now();
        const toRetire = [];
        for (const [id, lastCheckup] of dob)
            if (now - lastCheckup > 1000)
                toRetire.push(id);
        if (toRetire.length !== 0)
            retireWorkers(toRetire);
    }, 1000);
    console.log(`Zookeeper started watching events for ${birthLog} and ${deathLog}`);
}

// EXTERNAL MODULE: ./dist/main/common/events.js
var events = __webpack_require__(9);

// CONCATENATED MODULE: ./dist/main/services/fetcher/zookeeper.js


start(events["g" /* FETCHER_BIRTH_LOG */], events["h" /* FETCHER_DEATH_LOG */], 8);


/***/ }),

/***/ 6:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMP_BIG_INT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return setImmediateInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return STR_ONE; });
/* unused harmony export ZERO */
/* unused harmony export EIGHT */
/* unused harmony export MASK */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return bytesToBigInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return writeBigUInt96BE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return iteratorToArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return tabulate; });
/* unused harmony export IDENTITY_FUNCTION */
const CMP_BIG_INT = (a, b) => a < b ? -1 : a > b ? 1 : 0;
function setImmediateInterval(f, ms) {
    setImmediate(f);
    return setInterval(f, ms);
}
const STR_ONE = "1";
const ZERO = BigInt(0);
const EIGHT = BigInt(8);
const MASK = BigInt(0xFF);
function bytesToBigInt(bytes) {
    if (!bytes)
        return bytes;
    let result = ZERO;
    for (const byte of bytes)
        result = (result << EIGHT) | BigInt(byte);
    return result;
}
function writeBigUInt96BE(n, buffer, offset) {
    for (let i = 0; i <= 11; ++i) {
        const byte = (n & MASK);
        buffer[offset + 11 - i] = Number(byte);
        n >>= EIGHT;
    }
}
function iteratorToArray(itr) {
    const arr = [];
    for (const item of itr)
        arr.push(item);
    return arr;
}
let currentTableLine = 0;
let maxLineLength = 0;
function tabulate(data) {
    if (currentTableLine === 0)
        console.clear();
    const keys = Object.keys(data[0]);
    const printData = new Array(data.length + 1);
    printData[0] = {};
    const widths = keys.map(key => key.length);
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        printData[0][key] = key;
        for (let j = 0; j < data.length; ++j) {
            const value = `${data[j][key]}`;
            const prevPrintData = printData[j + 1];
            if (prevPrintData)
                prevPrintData[key] = value;
            else {
                const dictionary = {};
                dictionary[key] = value;
                printData[j + 1] = dictionary;
            }
            const prevWidth = widths[i];
            const nextWidth = value.length;
            if (prevWidth < nextWidth)
                widths[i] = nextWidth;
        }
    }
    if (currentTableLine !== 0) {
        const ESC = Buffer.of(0o033).toString();
        const UP = ESC + '[s' + ESC + '[' + currentTableLine + 'A';
        process.stdout.write(UP);
    }
    currentTableLine = 0;
    for (let i = 0; i < printData.length; ++i) {
        const row = printData[i];
        let line = "";
        for (let j = 0; j < keys.length; ++j) {
            const key = keys[j];
            const padLength = widths[j];
            line += `| ${row[key].padEnd(padLength, " ")} `;
        }
        line += '|';
        const length = line.length;
        if (maxLineLength < length) {
            maxLineLength = length;
        }
        else {
            line = line.padEnd(maxLineLength, " ");
        }
        process.stdout.write(line);
        process.stdout.write("\n");
        ++currentTableLine;
    }
}
const IDENTITY_FUNCTION = (r) => r;


/***/ }),

/***/ 7:
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("node-fetch");

/***/ }),

/***/ 9:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return EVENT_LOG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return FETCHER_BIRTH_LOG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return FETCHER_DEATH_LOG; });
/* unused harmony export NET_AGENT_LOG */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return SCHEDULE_COMPLETE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return COLD_START_COMPLETE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return HTML_PROCESS_COMPLETE; });
/* unused harmony export WIKI_PROCESS_COMPLETE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return FETCH_COMPLETE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return COMPRESS_COMPLETE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return DELETE_FILES; });
/* unused harmony export UNLOCK_FILE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return COMPRESSOR_LOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return SYNC_LOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BULK_INSERT_COMPLETE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return INSERT_CACHE; });
const EVENT_LOG = "event-log";
const FETCHER_BIRTH_LOG = "fetcher-birth-log";
const FETCHER_DEATH_LOG = "fetcher-death-log";
const NET_AGENT_LOG = "net-agent-log";
const SCHEDULE_COMPLETE = "schedule-complete";
const COLD_START_COMPLETE = "cold-start-complete";
const HTML_PROCESS_COMPLETE = "html-process-complete";
const WIKI_PROCESS_COMPLETE = "wiki-process-complete";
const FETCH_COMPLETE = "fetch-complete";
const COMPRESS_COMPLETE = "compress-complete";
const DELETE_FILES = "delete-files";
const UNLOCK_FILE = "unlock-file";
const COMPRESSOR_LOCK = "compressor-lock";
const SYNC_LOCK = "sync-lock";
const BULK_INSERT_COMPLETE = "bulk-insert-complete";
const INSERT_CACHE = "inserted";


/***/ })

/******/ });